package com.skylightapp.Classes;

import java.util.ArrayList;
import java.util.List;

public class Countries {
    public static final List<Country> COUNTRIES = new ArrayList<>();
    static {
        COUNTRIES.add(new Country("AF", "Afghanistan (‫افغانستان‬‎)", 93));
        COUNTRIES.add(new Country("AL", "Albania (Shqipëri)", 355));
        COUNTRIES.add(new Country("DZ", "Algeria (‫الجزائر‬‎)", 213));
        COUNTRIES.add(new Country("AS", "American Samoa", 1684));
        COUNTRIES.add(new Country("AD", "Andorra", 376));
        COUNTRIES.add(new Country("AO", "Angola", 244));
        COUNTRIES.add(new Country("AI", "Anguilla", 1264));
        COUNTRIES.add(new Country("AG", "Antigua and Barbuda", 1268));
        COUNTRIES.add(new Country("AR", "Argentina", 54));
        COUNTRIES.add(new Country("AM", "Armenia (Հայաստան)", 374));
        COUNTRIES.add(new Country("AW", "Aruba", 297));
        COUNTRIES.add(new Country("AU", "Australia", 61));
        COUNTRIES.add(new Country("AT", "Austria (Österreich)", 43));
        COUNTRIES.add(new Country("AZ", "Azerbaijan (Azərbaycan)", 994));
        COUNTRIES.add(new Country("BS", "Bahamas", 1242));
        COUNTRIES.add(new Country("BH", "Bahrain (‫البحرين‬‎)", 973));
        COUNTRIES.add(new Country("BD", "Bangladesh (বাংলাদেশ)", 880));
        COUNTRIES.add(new Country("BB", "Barbados", 1246));
        COUNTRIES.add(new Country("BY", "Belarus (Беларусь)", 375));
        COUNTRIES.add(new Country("BE", "Belgium (België)", 32));
        COUNTRIES.add(new Country("BZ", "Belize", 501));
        COUNTRIES.add(new Country("BJ", "Benin (Bénin)", 229));
        COUNTRIES.add(new Country("BM", "Bermuda", 1441));
        COUNTRIES.add(new Country("BT", "Bhutan (འབྲུག)", 975));
        COUNTRIES.add(new Country("BO", "Bolivia", 591));
        COUNTRIES.add(new Country("BA", "Bosnia and Herzegovina (Босна и Херцеговина)", 387));
        COUNTRIES.add(new Country("BW", "Botswana", 267));
        COUNTRIES.add(new Country("BR", "Brazil (Brasil)", 55));
        COUNTRIES.add(new Country("IO", "British Indian Ocean Territory", 246));
        COUNTRIES.add(new Country("VG", "British Virgin Islands", 1284));
        COUNTRIES.add(new Country("BN", "Brunei", 673));
        COUNTRIES.add(new Country("BG", "Bulgaria (България)", 359));
        COUNTRIES.add(new Country("BF", "Burkina Faso", 226));
        COUNTRIES.add(new Country("BI", "Burundi (Uburundi)", 257));
        COUNTRIES.add(new Country("KH", "Cambodia (កម្ពុជា)", 855));
        COUNTRIES.add(new Country("CM", "Cameroon (Cameroun)", 237));
        COUNTRIES.add(new Country("CA", "Canada", 1));
        COUNTRIES.add(new Country("CV", "Cape Verde (Kabu Verdi)", 238));
        COUNTRIES.add(new Country("BQ", "Caribbean Netherlands", 599));
        COUNTRIES.add(new Country("KY", "Cayman Islands", 1345));
        COUNTRIES.add(new Country("CF", "Central African Republic (République centrafricaine)", 236));
        COUNTRIES.add(new Country("TD", "Chad (Tchad)", 235));
        COUNTRIES.add(new Country("CL", "Chile", 56));
        COUNTRIES.add(new Country("CN", "China (中国)", 86));
        COUNTRIES.add(new Country("CX", "Christmas Island", 61));
        COUNTRIES.add(new Country("CC", "Cocos (Keeling) Islands", 61));
        COUNTRIES.add(new Country("CO", "Colombia", 57));
        COUNTRIES.add(new Country("KM", "Comoros (‫جزر القمر‬‎)", 269));
        COUNTRIES.add(new Country("CD", "Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)", 243));
        COUNTRIES.add(new Country("CG", "Congo (Republic) (Congo-Brazzaville)", 242));
        COUNTRIES.add(new Country("CK", "Cook Islands", 682));
        COUNTRIES.add(new Country("CR", "Costa Rica", 506));
        COUNTRIES.add(new Country("CI", "Côte d’Ivoire", 225));
        COUNTRIES.add(new Country("HR", "Croatia (Hrvatska)", 385));
        COUNTRIES.add(new Country("CU", "Cuba", 53));
        COUNTRIES.add(new Country("CW", "Curaçao", 599));
        COUNTRIES.add(new Country("CY", "Cyprus (Κύπρος)", 357));
        COUNTRIES.add(new Country("CZ", "Czech Republic (Česká republika)", 420));
        COUNTRIES.add(new Country("DK", "Denmark (Danmark)", 45));
        COUNTRIES.add(new Country("DJ", "Djibouti", 253));
        COUNTRIES.add(new Country("DM", "Dominica", 1767));
        COUNTRIES.add(new Country("DO", "Dominican Republic (República Dominicana)", 1));
        COUNTRIES.add(new Country("EC", "Ecuador", 593));
        COUNTRIES.add(new Country("EG", "Egypt (‫مصر‬‎)", 20));
        COUNTRIES.add(new Country("SV", "El Salvador", 503));
        COUNTRIES.add(new Country("GQ", "Equatorial Guinea (Guinea Ecuatorial)", 240));
        COUNTRIES.add(new Country("ER", "Eritrea", 291));
        COUNTRIES.add(new Country("EE", "Estonia (Eesti)", 372));
        COUNTRIES.add(new Country("ET", "Ethiopia", 251));
        COUNTRIES.add(new Country("FK", "Falkland Islands (Islas Malvinas)", 500));
        COUNTRIES.add(new Country("FO", "Faroe Islands (Føroyar)", 298));
        COUNTRIES.add(new Country("FJ", "Fiji", 679));
        COUNTRIES.add(new Country("FI", "Finland (Suomi)", 358));
        COUNTRIES.add(new Country("FR", "France", 33));
        COUNTRIES.add(new Country("GF", "French Guiana (Guyane française)", 594));
        COUNTRIES.add(new Country("PF", "French Polynesia (Polynésie française)", 689));
        COUNTRIES.add(new Country("GA", "Gabon", 241));
        COUNTRIES.add(new Country("GM", "Gambia", 220));
        COUNTRIES.add(new Country("GE", "Georgia (საქართველო)", 995));
        COUNTRIES.add(new Country("DE", "Germany (Deutschland)", 49));
        COUNTRIES.add(new Country("GH", "Ghana (Gaana)", 233));
        COUNTRIES.add(new Country("GI", "Gibraltar", 350));
        COUNTRIES.add(new Country("GR", "Greece (Ελλάδα)", 30));
        COUNTRIES.add(new Country("GL", "Greenland (Kalaallit Nunaat)", 299));
        COUNTRIES.add(new Country("GD", "Grenada", 1473));
        COUNTRIES.add(new Country("GP", "Guadeloupe", 590));
        COUNTRIES.add(new Country("GU", "Guam", 1671));
        COUNTRIES.add(new Country("GT", "Guatemala", 502));
        COUNTRIES.add(new Country("GG", "Guernsey", 44));
        COUNTRIES.add(new Country("GN", "Guinea (Guinée)", 224));
        COUNTRIES.add(new Country("GW", "Guinea-Bissau (Guiné Bissau)", 245));
        COUNTRIES.add(new Country("GY", "Guyana", 592));
        COUNTRIES.add(new Country("HT", "Haiti", 509));
        COUNTRIES.add(new Country("HN", "Honduras", 504));
        COUNTRIES.add(new Country("HK", "Hong Kong (香港)", 852));
        COUNTRIES.add(new Country("HU", "Hungary (Magyarország)", 36));
        COUNTRIES.add(new Country("IS", "Iceland (Ísland)", 354));
        COUNTRIES.add(new Country("IN", "India (भारत)", 91));
        COUNTRIES.add(new Country("ID", "Indonesia", 62));
        COUNTRIES.add(new Country("IR", "Iran (‫ایران‬‎)", 98));
        COUNTRIES.add(new Country("IQ", "Iraq (‫العراق‬‎)", 964));
        COUNTRIES.add(new Country("IE", "Ireland", 353));
        COUNTRIES.add(new Country("IM", "Isle of Man", 44));
        COUNTRIES.add(new Country("IL", "Israel (‫ישראל‬‎)", 972));
        COUNTRIES.add(new Country("IT", "Italy (Italia)", 39));
        COUNTRIES.add(new Country("JM", "Jamaica", 1876));
        COUNTRIES.add(new Country("JP", "Japan (日本)", 81));
        COUNTRIES.add(new Country("JE", "Jersey", 44));
        COUNTRIES.add(new Country("JO", "Jordan (‫الأردن‬‎)", 962));
        COUNTRIES.add(new Country("KZ", "Kazakhstan (Казахстан)", 7));
        COUNTRIES.add(new Country("KE", "Kenya", 254));
        COUNTRIES.add(new Country("KI", "Kiribati", 686));
        COUNTRIES.add(new Country("KW", "Kuwait (‫الكويت‬‎)", 965));
        COUNTRIES.add(new Country("KG", "Kyrgyzstan (Кыргызстан)", 996));
        COUNTRIES.add(new Country("LA", "Laos (ລາວ)", 856));
        COUNTRIES.add(new Country("LV", "Latvia (Latvija)", 371));
        COUNTRIES.add(new Country("LB", "Lebanon (‫لبنان‬‎)", 961));
        COUNTRIES.add(new Country("LS", "Lesotho", 266));
        COUNTRIES.add(new Country("LR", "Liberia", 231));
        COUNTRIES.add(new Country("LY", "Libya (‫ليبيا‬‎)", 218));
        COUNTRIES.add(new Country("LI", "Liechtenstein", 423));
        COUNTRIES.add(new Country("LT", "Lithuania (Lietuva)", 370));
        COUNTRIES.add(new Country("LU", "Luxembourg", 352));
        COUNTRIES.add(new Country("MO", "Macau (澳門)", 853));
        COUNTRIES.add(new Country("MK", "Macedonia (FYROM) (Македонија)", 389));
        COUNTRIES.add(new Country("MG", "Madagascar (Madagasikara)", 261));
        COUNTRIES.add(new Country("MW", "Malawi", 265));
        COUNTRIES.add(new Country("MY", "Malaysia", 60));
        COUNTRIES.add(new Country("MV", "Maldives", 960));
        COUNTRIES.add(new Country("ML", "Mali", 223));
        COUNTRIES.add(new Country("MT", "Malta", 356));
        COUNTRIES.add(new Country("MH", "Marshall Islands", 692));
        COUNTRIES.add(new Country("MQ", "Martinique", 596));
        COUNTRIES.add(new Country("MR", "Mauritania (‫موريتانيا‬‎)", 222));
        COUNTRIES.add(new Country("MU", "Mauritius (Moris)", 230));
        COUNTRIES.add(new Country("YT", "Mayotte", 262));
        COUNTRIES.add(new Country("MX", "Mexico (México)", 52));
        COUNTRIES.add(new Country("FM", "Micronesia", 691));
        COUNTRIES.add(new Country("MD", "Moldova (Republica Moldova)", 373));
        COUNTRIES.add(new Country("MC", "Monaco", 377));
        COUNTRIES.add(new Country("MN", "Mongolia (Монгол)", 976));
        COUNTRIES.add(new Country("ME", "Montenegro (Crna Gora)", 382));
        COUNTRIES.add(new Country("MS", "Montserrat", 1664));
        COUNTRIES.add(new Country("MA", "Morocco (‫المغرب‬‎)", 212));
        COUNTRIES.add(new Country("MZ", "Mozambique (Moçambique)", 258));
        COUNTRIES.add(new Country("MM", "Myanmar (Burma) (မြန်မာ)", 95));
        COUNTRIES.add(new Country("NA", "Namibia (Namibië)", 264));
        COUNTRIES.add(new Country("NR", "Nauru", 674));
        COUNTRIES.add(new Country("NP", "Nepal (नेपाल)", 977));
        COUNTRIES.add(new Country("NL", "Netherlands (Nederland)", 31));
        COUNTRIES.add(new Country("NC", "New Caledonia (Nouvelle-Calédonie)", 687));
        COUNTRIES.add(new Country("NZ", "New Zealand", 64));
        COUNTRIES.add(new Country("NI", "Nicaragua", 505));
        COUNTRIES.add(new Country("NE", "Niger (Nijar)", 227));
        COUNTRIES.add(new Country("NG", "Nigeria", 234));
        COUNTRIES.add(new Country("NU", "Niue", 683));
        COUNTRIES.add(new Country("NF", "Norfolk Island", 672));
        COUNTRIES.add(new Country("KP", "North Korea (조선 민주주의 인민 공화국)", 850));
        COUNTRIES.add(new Country("MP", "Northern Mariana Islands", 1670));
        COUNTRIES.add(new Country("NO", "Norway (Norge)", 47));
        COUNTRIES.add(new Country("OM", "Oman (‫عُمان‬‎)", 968));
        COUNTRIES.add(new Country("PK", "Pakistan (‫پاکستان‬‎)", 92));
        COUNTRIES.add(new Country("PW", "Palau", 680));
        COUNTRIES.add(new Country("PS", "Palestine (‫فلسطين‬‎)", 970));
        COUNTRIES.add(new Country("PA", "Panama (Panamá)", 507));
        COUNTRIES.add(new Country("PG", "Papua New Guinea", 675));
        COUNTRIES.add(new Country("PY", "Paraguay", 595));
        COUNTRIES.add(new Country("PE", "Peru (Perú)", 51));
        COUNTRIES.add(new Country("PH", "Philippines", 63));
        COUNTRIES.add(new Country("PL", "Poland (Polska)", 48));
        COUNTRIES.add(new Country("PT", "Portugal", 351));
        COUNTRIES.add(new Country("PR", "Puerto Rico", 1));
        COUNTRIES.add(new Country("QA", "Qatar (‫قطر‬‎)", 974));
        COUNTRIES.add(new Country("RE", "Réunion (La Réunion)", 262));
        COUNTRIES.add(new Country("RO", "Romania (România)", 40));
        COUNTRIES.add(new Country("RU", "Russia (Россия)", 7));
        COUNTRIES.add(new Country("RW", "Rwanda", 250));
        COUNTRIES.add(new Country("BL", "Saint Barthélemy (Saint-Barthélemy)", 590));
        COUNTRIES.add(new Country("SH", "Saint Helena", 290));
        COUNTRIES.add(new Country("KN", "Saint Kitts and Nevis", 1869));
        COUNTRIES.add(new Country("LC", "Saint Lucia", 1758));
        COUNTRIES.add(new Country("MF", "Saint Martin (Saint-Martin (partie française))", 590));
        COUNTRIES.add(new Country("PM", "Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)", 508));
        COUNTRIES.add(new Country("VC", "Saint Vincent and the Grenadines", 1784));
        COUNTRIES.add(new Country("WS", "Samoa", 685));
        COUNTRIES.add(new Country("SM", "San Marino", 378));
        COUNTRIES.add(new Country("ST", "São Tomé and Príncipe (São Tomé e Príncipe)", 239));
        COUNTRIES.add(new Country("SA", "Saudi Arabia (‫المملكة العربية السعودية‬‎)", 966));
        COUNTRIES.add(new Country("SN", "Senegal (Sénégal)", 221));
        COUNTRIES.add(new Country("RS", "Serbia (Србија)", 381));
        COUNTRIES.add(new Country("SC", "Seychelles", 248));
        COUNTRIES.add(new Country("SL", "Sierra Leone", 232));
        COUNTRIES.add(new Country("SG", "Singapore", 65));
        COUNTRIES.add(new Country("SX", "Sint Maarten", 1721));
        COUNTRIES.add(new Country("SK", "Slovakia (Slovensko)", 421));
        COUNTRIES.add(new Country("SI", "Slovenia (Slovenija)", 386));
        COUNTRIES.add(new Country("SB", "Solomon Islands", 677));
        COUNTRIES.add(new Country("SO", "Somalia (Soomaaliya)", 252));
        COUNTRIES.add(new Country("ZA", "South Africa", 27));
        COUNTRIES.add(new Country("KR", "South Korea (대한민국)", 82));
        COUNTRIES.add(new Country("SS", "South Sudan (‫جنوب السودان‬‎)", 211));
        COUNTRIES.add(new Country("ES", "Spain (España)", 34));
        COUNTRIES.add(new Country("LK", "Sri Lanka (ශ්‍රී ලංකාව)", 94));
        COUNTRIES.add(new Country("SD", "Sudan (‫السودان‬‎)", 249));
        COUNTRIES.add(new Country("SR", "Suriname", 597));
        COUNTRIES.add(new Country("SJ", "Svalbard and Jan Mayen", 47));
        COUNTRIES.add(new Country("SZ", "Swaziland", 268));
        COUNTRIES.add(new Country("SE", "Sweden (Sverige)", 46));
        COUNTRIES.add(new Country("CH", "Switzerland (Schweiz)", 41));
        COUNTRIES.add(new Country("SY", "Syria (‫سوريا‬‎)", 963));
        COUNTRIES.add(new Country("TW", "Taiwan (台灣)", 886));
        COUNTRIES.add(new Country("TJ", "Tajikistan", 992));
        COUNTRIES.add(new Country("TZ", "Tanzania", 255));
        COUNTRIES.add(new Country("TH", "Thailand (ไทย)", 66));
        COUNTRIES.add(new Country("TL", "Timor-Leste", 670));
        COUNTRIES.add(new Country("TG", "Togo", 228));
        COUNTRIES.add(new Country("TK", "Tokelau", 690));
        COUNTRIES.add(new Country("TO", "Tonga", 676));
        COUNTRIES.add(new Country("TT", "Trinidad and Tobago", 1868));
        COUNTRIES.add(new Country("TN", "Tunisia (‫تونس‬‎)", 216));
        COUNTRIES.add(new Country("TR", "Turkey (Türkiye)", 90));
        COUNTRIES.add(new Country("TM", "Turkmenistan", 993));
        COUNTRIES.add(new Country("TC", "Turks and Caicos Islands", 1649));
        COUNTRIES.add(new Country("TV", "Tuvalu", 688));
        COUNTRIES.add(new Country("VI", "U.S. Virgin Islands", 1340));
        COUNTRIES.add(new Country("UG", "Uganda", 256));
        COUNTRIES.add(new Country("UA", "Ukraine (Україна)", 380));
        COUNTRIES.add(new Country("AE", "United Arab Emirates (‫الإمارات العربية المتحدة‬‎)", 971));
        COUNTRIES.add(new Country("GB", "United Kingdom", 44));
        COUNTRIES.add(new Country("US", "United States", 1));
        COUNTRIES.add(new Country("UY", "Uruguay", 598));
        COUNTRIES.add(new Country("UZ", "Uzbekistan (Oʻzbekiston)", 998));
        COUNTRIES.add(new Country("VU", "Vanuatu", 678));
        COUNTRIES.add(new Country("VA", "Vatican City (Città del Vaticano)", 39));
        COUNTRIES.add(new Country("VE", "Venezuela", 58));
        COUNTRIES.add(new Country("VN", "Vietnam (Việt Nam)", 84));
        COUNTRIES.add(new Country("WF", "Wallis and Futuna", 681));
        COUNTRIES.add(new Country("EH", "Western Sahara (‫الصحراء الغربية‬‎)", 212));
        COUNTRIES.add(new Country("YE", "Yemen (‫اليمن‬‎)", 967));
        COUNTRIES.add(new Country("ZM", "Zambia", 260));
        COUNTRIES.add(new Country("ZW", "Zimbabwe", 263));
        COUNTRIES.add(new Country("AX", "Åland Islands", 358));
    }
}
